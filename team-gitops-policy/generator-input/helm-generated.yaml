apiVersion: v1
kind: Namespace
metadata:
  name: fteam-ci-cd
spec: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: zteam-ci-cd
spec: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: fteam-ci-cd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: zteam-ci-cd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: fteam-ci-cd-argocd-application-controller
    app.kubernetes.io/part-of: fteam-ci-cd
  name: fteam-ci-cd-argocd-application-controller
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: argocd-server
    app.kubernetes.io/name: fteam-ci-cd-gitops-argocd-server
    app.kubernetes.io/part-of: fteam-ci-cd
  name: fteam-ci-cd-gitops-argocd-server
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - delete
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: zteam-ci-cd-argocd-application-controller
    app.kubernetes.io/part-of: zteam-ci-cd
  name: zteam-ci-cd-argocd-application-controller
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: argocd-server
    app.kubernetes.io/name: zteam-ci-cd-gitops-argocd-server
    app.kubernetes.io/part-of: zteam-ci-cd
  name: zteam-ci-cd-gitops-argocd-server
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - delete
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: fteam-ci-cd-argocd-application-controller
    app.kubernetes.io/part-of: fteam-ci-cd
  name: fteam-ci-cd-argocd-application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fteam-ci-cd-argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-argocd-application-controller
  namespace: fteam-ci-cd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: argocd-server
    app.kubernetes.io/name: fteam-ci-cd-argocd-server
    app.kubernetes.io/part-of: fteam-ci-cd
  name: fteam-ci-cd-argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fteam-ci-cd-gitops-argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-argocd-server
  namespace: fteam-ci-cd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: zteam-ci-cd-argocd-application-controller
    app.kubernetes.io/part-of: zteam-ci-cd
  name: zteam-ci-cd-argocd-application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zteam-ci-cd-argocd-application-controller
subjects:
- kind: ServiceAccount
  name: argocd-argocd-application-controller
  namespace: zteam-ci-cd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: argocd-server
    app.kubernetes.io/name: zteam-ci-cd-argocd-server
    app.kubernetes.io/part-of: zteam-ci-cd
  name: zteam-ci-cd-argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: zteam-ci-cd-gitops-argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-argocd-server
  namespace: zteam-ci-cd
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: default
  namespace: fteam-ci-cd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  sourceRepos:
  - '*'
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: default
  namespace: zteam-ci-cd
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  sourceRepos:
  - '*'
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  labels:
    app: argocd
  name: argocd
  namespace: fteam-ci-cd
spec:
  applicationInstanceLabelKey: rht-gitops.com/fteam-ci-cd
  applicationSet: {}
  dex:
    openShiftOAuth: true
  initialRepositories: |
    - name: ubiquitous-journey
      url: https://github.com/rht-labs/ubiquitous-journey.git
    - name: redhat-cop
      type: helm
      url: https://redhat-cop.github.io/helm-charts
  notifications:
    enabled: true
  rbac:
    defaultPolicy: role:admin
    policy: |
      g, system:cluster-admins, role:admin
    scopes: '[groups]'
  repositoryCredentials: |
    - url: gitlab-ce.apps.sno.sandbox1131.opentlc.com
      type: git
      passwordSecret:
        key: password
        name: git-auth
      usernameSecret:
        key: username
        name: git-auth
  resourceExclusions: |
    - apiGroups:
        - tekton.dev
      clusters:
        - '*'
      kinds:
        - TaskRun
        - PipelineRun
  server:
    route:
      enabled: true
      tls:
        termination: reencrypt
  version: v2.5.12
---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  labels:
    app: argocd
  name: argocd
  namespace: zteam-ci-cd
spec:
  applicationInstanceLabelKey: rht-gitops.com/zteam-ci-cd
  applicationSet: {}
  dex:
    openShiftOAuth: true
  initialRepositories: |
    - name: ubiquitous-journey
      url: https://github.com/rht-labs/ubiquitous-journey.git
    - name: redhat-cop
      type: helm
      url: https://redhat-cop.github.io/helm-charts
  notifications:
    enabled: true
  rbac:
    defaultPolicy: role:admin
    policy: |
      g, system:cluster-admins, role:admin
    scopes: '[groups]'
  repositoryCredentials: |
    - url: gitlab-ce.apps.sno.sandbox1131.opentlc.com
      type: git
      passwordSecret:
        key: password
        name: git-auth
      usernameSecret:
        key: username
        name: git-auth
  resourceExclusions: |
    - apiGroups:
        - tekton.dev
      clusters:
        - '*'
      kinds:
        - TaskRun
        - PipelineRun
  server:
    route:
      enabled: true
      tls:
        termination: reencrypt
  version: v2.5.12
